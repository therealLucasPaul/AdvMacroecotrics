var <- (a*b)/((a+b)^2*(a+b+1))
output <- rbind(output,c(a,b,mean,mode,var))
}
colnames(output) <- c("Alpha","Beta","Mean","Mode","Median")
return(round(output,5))
}
n <- 30
sumy <- 10
people <- 20
alphaNew <- a + sumy
betaNew <- b + (people*n-sumy)
plot(NULL, xlim=c(0,0.1), ylim=c(0,100), ylab="PDF", xlab="")
for (i in seq(5)) {
#curve(normConst[i]*x^(alphaNew[i]-1)*(1-x)^(betaNew[i]-1), from=0,to=0.1, lwd=2,col=cols[i],add = T)
curve(dbeta(x,alphaNew[i],betaNew[i]), from=0,to=0.1, lwd=2,col=cols[i],add = T)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols,
legend = c("a=2, b=20","a=2, b=5","a=1, b=1","a=5, b=2","a=20, b=2"),
title = c("Prior Parameters"))
n <- 30
sumy <- 10
people <- 20
alphaNew <- a + sumy
betaNew <- b + (people*n-sumy)
plot(NULL, xlim=c(0,0.1), ylim=c(0,100), ylab="PDF", xlab="")
for (i in seq(5)) {
curve(dbeta(x,alphaNew[i],betaNew[i]), from=0,to=0.1, lwd=2,col=cols[i],add = T)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols,
legend = c("a=2, b=20","a=2, b=5","a=1, b=1","a=5, b=2","a=20, b=2"),
title = c("Prior Parameters"))
PointEstimates <- function(alpha,beta){
output <- data.frame()
for (i in seq(length(a))){
a <- alpha[i]
b <- beta[i]
mean <- a/(a+b)
mode <- (a-1)/(a+b+2)
median <- (a-1/3)/(a+b-2/3)
output <- rbind(output,c(a,b,mean,mode,var))
}
colnames(output) <- c("Alpha","Beta","Mean","Mode","Median")
return(round(output,5))
}
a <- c(2,2,1,5,20)
b <- c(20,5,1,2,2)
cols <- brewer.pal(5, "Dark2")
plot(NULL, xlim=c(0,1), ylim=c(0,8), ylab="PDF", xlab="", main="Several Beta Prior Distributions")
for (i in seq(5)) {
curve(dbeta(x,a[i],b[i]), from=0,to=1, lwd=2,col=cols[i],add = T)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols,
legend = c("a=2,b=20","a=2,b=5","a=1,b=1","a=5,b=2","a=20,b=2"))
n <- 30
sumy <- 10
people <- 20
alphaNew <- a + sumy
betaNew <- b + (people*n-sumy)
plot(NULL, xlim=c(0,0.1), ylim=c(0,100), ylab="PDF", xlab="")
for (i in seq(5)) {
curve(dbeta(x,alphaNew[i],betaNew[i]), from=0,to=0.1, lwd=2,col=cols[i],add = T)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols,
legend = c("a=2, b=20","a=2, b=5","a=1, b=1","a=5, b=2","a=20, b=2"),
title = c("Prior Parameters"))
output <-PointEstimates(a,b)
a
b
output <-PointEstimates(alphaNew,betaNew)
PointEstimates <- function(alpha,beta){
output <- data.frame()
for (i in seq(length(a))){
a <- alpha[i]
b <- beta[i]
mean <- a/(a+b)
mode <- (a-1)/(a+b+2)
median <- (a-1/3)/(a+b-2/3)
output <- rbind(output,c(a,b,mean,mode,var))
}
colnames(output) <- c("Alpha","Beta","Mean","Mode","Median")
return(round(output,5))
}
output <-PointEstimates(a,b)
PointEstimates(a,b)
PointEstimates(a,b)
PointEstimates <- function(alpha,beta){
output <- data.frame()
for (i in seq(length(a))){
a <- alpha[i]
b <- beta[i]
mean <- a/(a+b)
mode <- (a-1)/(a+b+2)
median <- (a-1/3)/(a+b-2/3)
output <- rbind(output,c(a,b,mean,mode,var))
}
colnames(output) <- c("Alpha","Beta","Mean","Mode","Median")
return(round(output,5))
}
PointEstimates <- function(alpha,beta){
output <- data.frame()
for (i in seq(length(a))){
a <- alpha[i]
b <- beta[i]
mean <- a/(a+b)
mode <- (a-1)/(a+b+2)
median <- (a-1/3)/(a+b-2/3)
output <- rbind(output,c(a,b,mean,mode,median))
}
colnames(output) <- c("Alpha","Beta","Mean","Mode","Median")
return(round(output,5))
}
output <- PointEstimates(a,b)
output
output <-PointEstimates(alphaNew,betaNew)
output
output <-PointEstimates(alphaNew,betaNew)
output
10/(20*30)
simObs <- function(n,k,alpha,beta,sigma){
if(length(beta)==k){
# Generate errors from a (0,sigma)-normal distribution
errors <- rnorm(n,0,sigma)
# Generate k covariates from a uniform distribution in the intervall [-10,10]
x <- vector()
for (i in seq(k)) {
x <- cbind(x,runif(n, min=-10,max=10))
}
# Generate the dependent variables based on the given
# independent variables and errors
y <- alpha + x %*% beta  + errors
# Return data frame with the data
output <- data.frame(Y = y, X = x)
return(output)
}
else{
print("Number of variables K and length beta vector does not match!")
break
}
}
?rnorm
coeflist = vector()
for (i in seq(1000)) {
input <- simObs(100,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs")
varbeta <- var(coeflist)
coeflist = vector()
for (i in seq(1000)) {
input <- simObs(100,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs", xlab = "Estimate of the beta coefficient")
varbeta <- var(coeflist)
coeflist = vector()
for (i in seq(10000)) {
input <- simObs(100,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs", xlab = "Estimate of the beta coefficient")
varbeta <- var(coeflist)
coeflist = vector()
for (i in seq(1000)) {
input <- simObs(100,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs", xlab = "Estimate of the beta coefficient")
varbeta <- var(coeflist)
coeflist = vector()
for (i in seq(1000)) {
input <- simObs(1000,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs", xlab = "Estimate of the beta coefficient")
varbeta <- var(coeflist)
coeflist = vector()
for (i in seq(1000)) {
input <- simObs(100,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs", xlab = "Estimate of the beta coefficient")
varbeta <- var(coeflist)
plot(NULL, xlim=c(-10,10), ylim=c(0,0.8), ylab="PDF", xlab="Mean of Beta", main="Possible Prior Distributions for beta")
mean <- c(0,-2,-5)
sd <- c(2,1,0.5)
for (i in seq(3)) {
curve(dnorm(x,mean[i],sd[i]), from=-10,to=10, lwd=2,col=cols[i],add = T)
}
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(100,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=100")
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(100,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=100", add=TRUE)
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(100,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
lines(x,d)
#plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=100", add=TRUE)
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
lines(x,d)
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(100,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
lines(x,d)
#plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=100", add=TRUE)
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(100,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
lines(x,d,col="red")
#plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=100", add=TRUE)
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-4,-2,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-3.5,-2.5,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-3.8,-2.8,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-3.2,-2.8,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
library(RColorBrewer)
set.seed(1234)
n = 100
normv <- rnorm(n, mean=5, sd=3)
meanVector <- vector()
for(i in seq(n)){
meanVector <- c(meanVector,sum(normv[1:i])/i)
}
plot(meanVector~seq(n), ylim=c(0,10), type="l", ylab="Mean Estimate", xlab="Number Of Draws", main="Estimated Mean of a Normal(0,1) Distribution")
abline(h=5,col="red")
set.seed(1234)
n = 10000
cauchyv <- rnorm(n,0,1)/rnorm(n,0,1)
meanVector <- vector()
for(i in seq(n)){
meanVector <- c(meanVector,sum(cauchyv[1:i])/i)
}
plot(meanVector~seq(n), ylim=c(-2,2), type="l", ylab="Mean Estimate", xlab="Number Of Draws", main="Estimated Mean of a Cauchy Distribution with Scale 1")
abline(h=0,col="red")
PointEstimates <- function(alpha,beta){
output <- data.frame()
for (i in seq(length(a))){
a <- alpha[i]
b <- beta[i]
mean <- a/(a+b)
mode <- (a-1)/(a+b+2)
median <- (a-1/3)/(a+b-2/3)
output <- rbind(output,c(a,b,mean,mode,median))
}
colnames(output) <- c("Alpha","Beta","Mean","Mode","Median")
return(round(output,5))
}
a <- c(2,2,1,5,20)
b <- c(20,5,1,2,2)
cols <- brewer.pal(5, "Dark2")
plot(NULL, xlim=c(0,1), ylim=c(0,8), ylab="PDF", xlab="", main="Several Beta Prior Distributions")
for (i in seq(5)) {
curve(dbeta(x,a[i],b[i]), from=0,to=1, lwd=2,col=cols[i],add = T)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols,
legend = c("a=2,b=20","a=2,b=5","a=1,b=1","a=5,b=2","a=20,b=2"))
n <- 30
sumy <- 10
people <- 20
alphaNew <- a + sumy
betaNew <- b + (people*n-sumy)
plot(NULL, xlim=c(0,0.1), ylim=c(0,100), ylab="PDF", xlab="")
for (i in seq(5)) {
curve(dbeta(x,alphaNew[i],betaNew[i]), from=0,to=0.1, lwd=2,col=cols[i],add = T)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols,
legend = c("a=2, b=20","a=2, b=5","a=1, b=1","a=5, b=2","a=20, b=2"),
title = c("Prior Parameters"))
output <-PointEstimates(alphaNew,betaNew)
output
simObs <- function(n,k,alpha,beta,sigma){
if(length(beta)==k){
# Generate errors from a (0,sigma)-normal distribution
errors <- rnorm(n,0,sigma)
# Generate k covariates from a uniform distribution in the intervall [-10,10]
x <- vector()
for (i in seq(k)) {
x <- cbind(x,runif(n, min=-10,max=10))
}
# Generate the dependent variables based on the given
# independent variables and errors
y <- alpha + x %*% beta  + errors
# Return data frame with the data
output <- data.frame(Y = y, X = x)
return(output)
}
else{
print("Number of variables K and length beta vector does not match!")
break
}
}
coeflist = vector()
for (i in seq(1000)) {
input <- simObs(100,1,5,3,1)
mod <- lm(Y~X, data=input)
coeflist <- c(coeflist,mod$coefficients["X"])
}
hist(coeflist, main="Distribution of beta coefficients based on 1000 runs", xlab = "Estimate of the beta coefficient")
varbeta <- var(coeflist)
plot(NULL, xlim=c(-10,10), ylim=c(0,0.8), ylab="PDF", xlab="Mean of Beta", main="Possible Prior Distributions for beta")
mean <- c(0,-2,-5)
sd <- c(2,1,0.5)
for (i in seq(3)) {
curve(dnorm(x,mean[i],sd[i]), from=-10,to=10, lwd=2,col=cols[i],add = T)
}
SimData <- simObs(50,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-3.2,-2.8,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=50")
SimData <- simObs(100,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-3.2,-2.8,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=100")
SimData <- simObs(200,1,1,-3,1)
X <- cbind(1,SimData$X)
Y <- SimData$Y
mean_prior <- -5
sigma_prior <- 0.5
sigma_post <- solve((1/sigma_prior) + t(X)%*%X)
mean_post <- sigma_post%*%(mean_prior/sigma_prior + t(X)%*%Y)
x<-seq(-3.2,-2.8,0.01)
d<-dnorm(x,mean_post[2],sigma_post[2,2])
plot(x,d,type="l",lwd = 2, col = cols[1], xlab ="Beta", ylab = "Density",yaxt='n', main = "Posterior Density Plot for n=200")
prior1 <- rnorm(10000, mean=10,sd=2)
prior2 <- rnorm(10000, mean=2,sd=10)
hist(prior1)
hist(prior2)
prior1 <- rnorm(10000, mean=10,sd=2)
prior2 <- rnorm(10000, mean=2,sd=10)
hist(prior1, main="Histogramm of a N(10,2) prior")
hist(prior2, main="Histogramm of a N(2,10) prior")
prior1 <- rnorm(10000, mean=10,sd=2)
prior2 <- rnorm(10000, mean=2,sd=10)
hist(prior1, main="Histogramm of a N(10,2) prior",xlab="")
hist(prior2, main="Histogramm of a N(2,10) prior",xlab="")
alpha<-0.5
eta <- c(0.01,1,100)
plot(NULL, xlim=c(0,1), ylim=c(0,2), ylab="PDF", xlab="")
for (i in seq(3)) {
curve(dgamma(x, shape = 0.5, rate = eta[i]), from = 0, to = 1,
n=2000,add = T, col=cols[i],lwd=3)
}
legend(x="topright",
lwd=2,
lty=1,
col=cols[1:3],
legend = c("eta=0.01","eta=1","eta=100"),
title = c("Prior Parameters"))
